"use strict";const{app:e,BrowserWindow:d,ipcMain:u}=require("electron"),s=require("path"),w=require("https"),f=require("http");u.handle("proxy-fetch",async(n,o,c={})=>new Promise((l,p)=>{const i=(o.startsWith("https")?w:f).get(o,c,t=>{let r="";t.on("data",h=>r+=h),t.on("end",()=>{l({status:t.statusCode,headers:t.headers,body:r})})});i.on("error",p),i.end()}));function a(){const n=new d({width:1450,height:950,webPreferences:{preload:s.join(__dirname,"preload.js"),nodeIntegration:!1,contextIsolation:!0}});!e.isPackaged&&process.env.NODE_ENV==="development"?n.loadURL("http://localhost:5173"):n.loadFile(s.join(__dirname,"..","renderer","main_window","index.html")),process.env.NODE_ENV==="production"&&console.log("Setting up WASM paths for production build...")}e.whenReady().then(()=>{a(),e.on("activate",function(){d.getAllWindows().length===0&&a()})});e.on("window-all-closed",function(){process.platform!=="darwin"&&e.quit()});
